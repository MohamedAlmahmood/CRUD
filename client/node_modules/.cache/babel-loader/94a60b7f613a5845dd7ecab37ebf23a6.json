{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/almahmoodmo/CRUD/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Axios from 'axios'; //allows us to pass variables from front end to back end\n\nfunction App() {\n  _s();\n\n  const [movieName, setMovieName] = useState(\"\"); //State makes the values dynamic and changeable by the user.\n\n  const [review, setReview] = useState(\"\"); //we can use setReview(new value) to change the review. In this case the state is a text\n\n  const [movieList, setmovieList] = useState([]); //The use state is going to be an array.\n\n  useEffect( //used as a side effect of the app being rendered. \n  //useEffect will show the result after the app is rendered.\n  //so this code will be executed later because we are using useEffect\n  () => {\n    Axios.get(\"http://localhost:3001/api/get\").then(response => {\n      setmovieList(response.data); //array semovieList = response.data array\n    });\n  }, []);\n\n  const submitReview = () => {\n    //this method is for the submit review button\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      //pass the information from to this backend url\n      //pass to localhot:3001/api/insert which is the backend url\n      movieName: movieName,\n      //movieName is passed to backend as movieName\n      movieReview: review //review is passed to backend as movieReview\n\n    }).then(() => {\n      alert('successful insert');\n      console.log(\"movie submit button working\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD APPLICATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\" //the input is text\n        ,\n        name: \"movieName\" //the name of the input\n        ,\n        onChange: e => {\n          setMovieName(e.target.value); //new value of moviename\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"review\",\n        onChange: e => {\n          setReview(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitReview,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), movieList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"movie name: \", val.movieName, \" | movie review: \", val.movieReview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6wH1xjjZGHkEIG/xXFpl1djg3hM=\");\n\n_c = App;\nexport default App;\n/*\n1. type 'npm install axios' which lets you use your own api.\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/almahmoodmo/CRUD/client/src/App.js"],"names":["React","useState","useEffect","Axios","App","movieName","setMovieName","review","setReview","movieList","setmovieList","get","then","response","data","submitReview","post","movieReview","alert","console","log","e","target","value","map","val"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAE3B,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CADa,CACgC;;AAC7C,QAAM,CAACM,MAAD,EAASC,SAAT,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAE0B;;AACvC,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAHa,CAGgC;;AAE7CC,EAAAA,SAAS,EAAC;AACR;AACA;AACA,QAAI;AACHC,IAAAA,KAAK,CAACQ,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAY;AAC1DH,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAV,CAAZ,CAD0D,CAC9B;AAC7B,KAFD;AAGA,GAPM,EAQP,EARO,CAAT;;AAUA,QAAMC,YAAY,GAAG,MAAI;AAAE;AACzBZ,IAAAA,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA+C;AAAC;AAC9C;AACAX,MAAAA,SAAS,EAAEA,SAFkC;AAEvB;AACtBY,MAAAA,WAAW,EAAEV,MAHgC,CAGxB;;AAHwB,KAA/C,EAIGK,IAJH,CAIQ,MAAI;AACVM,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAPD;AAQD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACC,QAAA,IAAI,EAAC,MADN,CACa;AADb;AAEC,QAAA,IAAI,EAAC,WAFN,CAEkB;AAFlB;AAGC,QAAA,QAAQ,EAAGC,CAAD,IAAK;AACdf,UAAAA,YAAY,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CADc,CACe;AAC9B;AALD;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,QAAQ,EAAGF,CAAD,IAAK;AACbb,UAAAA,SAAS,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD;AALD;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE;AAAQ,QAAA,OAAO,EAAER,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,EAkBGN,SAAS,CAACe,GAAV,CAAeC,GAAD,IAAO;AACpB,4BACE;AAAA,qCAAgBA,GAAG,CAACpB,SAApB,uBAAgDoB,GAAG,CAACR,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GA5DQb,G;;KAAAA,G;AA6DT,eAAeA,GAAf;AAEA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Axios from 'axios'; //allows us to pass variables from front end to back end\n\nfunction App() {\n  const [movieName, setMovieName]=useState(\"\");//State makes the values dynamic and changeable by the user.\n  const [review, setReview]=useState(\"\");//we can use setReview(new value) to change the review. In this case the state is a text\n  const [movieList, setmovieList]=useState([]);//The use state is going to be an array.\n\n  useEffect(//used as a side effect of the app being rendered. \n    //useEffect will show the result after the app is rendered.\n    //so this code will be executed later because we are using useEffect\n    ()=>{ \n     Axios.get(\"http://localhost:3001/api/get\").then((response)=>{\n       setmovieList(response.data);//array semovieList = response.data array\n     }) \n    }, \n    [])\n\n  const submitReview = ()=>{ //this method is for the submit review button\n    Axios.post(\"http://localhost:3001/api/insert\", {//pass the information from to this backend url\n      //pass to localhot:3001/api/insert which is the backend url\n      movieName: movieName, //movieName is passed to backend as movieName\n      movieReview: review, //review is passed to backend as movieReview\n    }).then(()=>{\n      alert('successful insert'); \n      console.log(\"movie submit button working\")\n    });\n  };\n  return (\n    <div className=\"App\">\n\n      <h1>\n        CRUD APPLICATION\n      </h1>\n\n      <div className=\"form\">\n        <label>Movie Name</label>\n        <input \n         type=\"text\" //the input is text\n         name=\"movieName\" //the name of the input\n         onChange={(e)=>{\n          setMovieName(e.target.value);//new value of moviename\n        }}></input>\n\n        <label>Review</label>\n        <input \n        type=\"text\" \n        name=\"review\" \n        onChange={(e)=>{\n          setReview(e.target.value);\n        }}></input>\n        <button onClick={submitReview}>submit</button>\n\n        {movieList.map((val)=>{\n          return (\n            <p>movie name: {val.movieName} | movie review: {val.movieReview}</p>\n          )\n        })}\n\n      </div>\n      \n    </div>\n  );\n}\nexport default App;\n\n/*\n1. type 'npm install axios' which lets you use your own api.\n*/"]},"metadata":{},"sourceType":"module"}